Terminals unused in grammar

    RESERVED


State 102 conflicts: 13 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: PACKAGE ID SEMICOLON Declarations

    2 Declarations: Declarations VarDeclaration SEMICOLON
    3             | Declarations FuncDeclaration SEMICOLON
    4             | %empty

    5 VarDeclaration: VAR VarSpec
    6               | VAR LPAR VarSpec SEMICOLON RPAR

    7 FuncDeclaration: FUNC ID LPAR FuncParams RPAR FuncType FuncBody

    8 FuncParams: Parameters
    9           | %empty

   10 FuncType: Type
   11         | %empty

   12 VarSpec: ID IdReps Type

   13 IdReps: IdReps COMMA ID
   14       | %empty

   15 Type: INT
   16     | FLOAT32
   17     | BOOL
   18     | STRING

   19 Parameters: ID Type ParamOpts

   20 ParamOpts: ParamOpts COMMA ID Type
   21          | %empty

   22 FuncBody: LBRACE VarsAndStatements RBRACE

   23 VarsAndStatements: VarsAndStatements VASOpts SEMICOLON
   24                  | %empty

   25 VASOpts: VarDeclaration
   26        | Statement
   27        | %empty

   28 Statement: ID ASSIGN Expr
   29          | LBRACE StmtBlock RBRACE
   30          | IF Expr LBRACE StmtBlock RBRACE ElseStmt
   31          | FOR ExprOpt LBRACE StmtBlock RBRACE
   32          | RETURN ExprOpt
   33          | FuncInvocation
   34          | ParseArgs
   35          | PRINT LPAR STRLIT RPAR
   36          | PRINT LPAR Expr RPAR

   37 StmtBlock: StmtBlock Statement SEMICOLON
   38          | %empty

   39 ElseStmt: ELSE LBRACE StmtBlock RBRACE
   40         | %empty

   41 ExprOpt: Expr
   42        | %empty

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

   44 FuncInvocation: ID LPAR FuncInvocationOpts RPAR

   45 FuncInvocationOpts: Expr ExprReps
   46                   | %empty

   47 ExprReps: ExprReps COMMA Expr
   48         | %empty

   49 Expr: Expr ExprOperators Expr
   50     | NOT Expr
   51     | INTLIT
   52     | REALLIT
   53     | ID
   54     | FuncInvocation
   55     | LPAR Expr RPAR

   56 ExprOperators: OR
   57              | AND
   58              | LT
   59              | GT
   60              | EQ
   61              | NE
   62              | LE
   63              | GE
   64              | PLUS
   65              | MINUS
   66              | STAR
   67              | DIV
   68              | MOD


Terminals, with rules where they appear

    $end (0) 0
    error (256)
    INTLIT (258) 51
    STRLIT (259) 35
    REALLIT (260) 52
    SEMICOLON (261) 1 2 3 6 23 37
    COMMA (262) 13 20 43 47
    BLANKID (263) 43
    ASSIGN (264) 28 43
    ID (265) 1 7 12 13 19 20 28 43 44 53
    VAR (266) 5 6
    PLUS (267) 64
    MINUS (268) 65
    STAR (269) 66
    DIV (270) 67
    MOD (271) 68
    EQ (272) 60
    GE (273) 63
    GT (274) 59
    LE (275) 62
    LT (276) 58
    NE (277) 61
    NOT (278) 50
    AND (279) 57
    OR (280) 56
    LPAR (281) 6 7 35 36 43 44 55
    RPAR (282) 6 7 35 36 43 44 55
    LBRACE (283) 22 29 30 31 39
    RBRACE (284) 22 29 30 31 39
    LSQ (285) 43
    RSQ (286) 43
    PACKAGE (287) 1
    RETURN (288) 32
    PRINT (289) 35 36
    PARSEINT (290) 43
    FUNC (291) 7
    CMDARGS (292) 43
    RESERVED (293)
    IF (294) 30
    ELSE (295) 39
    FOR (296) 31
    INT (297) 15
    FLOAT32 (298) 16
    BOOL (299) 17
    STRING (300) 18


Nonterminals, with rules where they appear

    $accept (46)
        on left: 0
    Program (47)
        on left: 1
        on right: 0
    Declarations (48)
        on left: 2 3 4
        on right: 1 2 3
    VarDeclaration (49)
        on left: 5 6
        on right: 2 25
    FuncDeclaration (50)
        on left: 7
        on right: 3
    FuncParams (51)
        on left: 8 9
        on right: 7
    FuncType (52)
        on left: 10 11
        on right: 7
    VarSpec (53)
        on left: 12
        on right: 5 6
    IdReps (54)
        on left: 13 14
        on right: 12 13
    Type (55)
        on left: 15 16 17 18
        on right: 10 12 19 20
    Parameters (56)
        on left: 19
        on right: 8
    ParamOpts (57)
        on left: 20 21
        on right: 19 20
    FuncBody (58)
        on left: 22
        on right: 7
    VarsAndStatements (59)
        on left: 23 24
        on right: 22 23
    VASOpts (60)
        on left: 25 26 27
        on right: 23
    Statement (61)
        on left: 28 29 30 31 32 33 34 35 36
        on right: 26 37
    StmtBlock (62)
        on left: 37 38
        on right: 29 30 31 37 39
    ElseStmt (63)
        on left: 39 40
        on right: 30
    ExprOpt (64)
        on left: 41 42
        on right: 31 32
    ParseArgs (65)
        on left: 43
        on right: 34
    FuncInvocation (66)
        on left: 44
        on right: 33 54
    FuncInvocationOpts (67)
        on left: 45 46
        on right: 44
    ExprReps (68)
        on left: 47 48
        on right: 45 47
    Expr (69)
        on left: 49 50 51 52 53 54 55
        on right: 28 30 36 41 43 45 47 49 50 55
    ExprOperators (70)
        on left: 56 57 58 59 60 61 62 63 64 65 66 67 68
        on right: 49


State 0

    0 $accept: . Program $end

    PACKAGE  shift, and go to state 1

    Program  go to state 2


State 1

    1 Program: PACKAGE . ID SEMICOLON Declarations

    ID  shift, and go to state 3


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 4


State 3

    1 Program: PACKAGE ID . SEMICOLON Declarations

    SEMICOLON  shift, and go to state 5


State 4

    0 $accept: Program $end .

    $default  accept


State 5

    1 Program: PACKAGE ID SEMICOLON . Declarations

    $default  reduce using rule 4 (Declarations)

    Declarations  go to state 6


State 6

    1 Program: PACKAGE ID SEMICOLON Declarations .
    2 Declarations: Declarations . VarDeclaration SEMICOLON
    3             | Declarations . FuncDeclaration SEMICOLON

    VAR   shift, and go to state 7
    FUNC  shift, and go to state 8

    $default  reduce using rule 1 (Program)

    VarDeclaration   go to state 9
    FuncDeclaration  go to state 10


State 7

    5 VarDeclaration: VAR . VarSpec
    6               | VAR . LPAR VarSpec SEMICOLON RPAR

    ID    shift, and go to state 11
    LPAR  shift, and go to state 12

    VarSpec  go to state 13


State 8

    7 FuncDeclaration: FUNC . ID LPAR FuncParams RPAR FuncType FuncBody

    ID  shift, and go to state 14


State 9

    2 Declarations: Declarations VarDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 15


State 10

    3 Declarations: Declarations FuncDeclaration . SEMICOLON

    SEMICOLON  shift, and go to state 16


State 11

   12 VarSpec: ID . IdReps Type

    $default  reduce using rule 14 (IdReps)

    IdReps  go to state 17


State 12

    6 VarDeclaration: VAR LPAR . VarSpec SEMICOLON RPAR

    ID  shift, and go to state 11

    VarSpec  go to state 18


State 13

    5 VarDeclaration: VAR VarSpec .

    $default  reduce using rule 5 (VarDeclaration)


State 14

    7 FuncDeclaration: FUNC ID . LPAR FuncParams RPAR FuncType FuncBody

    LPAR  shift, and go to state 19


State 15

    2 Declarations: Declarations VarDeclaration SEMICOLON .

    $default  reduce using rule 2 (Declarations)


State 16

    3 Declarations: Declarations FuncDeclaration SEMICOLON .

    $default  reduce using rule 3 (Declarations)


State 17

   12 VarSpec: ID IdReps . Type
   13 IdReps: IdReps . COMMA ID

    COMMA    shift, and go to state 20
    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    Type  go to state 25


State 18

    6 VarDeclaration: VAR LPAR VarSpec . SEMICOLON RPAR

    SEMICOLON  shift, and go to state 26


State 19

    7 FuncDeclaration: FUNC ID LPAR . FuncParams RPAR FuncType FuncBody

    ID  shift, and go to state 27

    $default  reduce using rule 9 (FuncParams)

    FuncParams  go to state 28
    Parameters  go to state 29


State 20

   13 IdReps: IdReps COMMA . ID

    ID  shift, and go to state 30


State 21

   15 Type: INT .

    $default  reduce using rule 15 (Type)


State 22

   16 Type: FLOAT32 .

    $default  reduce using rule 16 (Type)


State 23

   17 Type: BOOL .

    $default  reduce using rule 17 (Type)


State 24

   18 Type: STRING .

    $default  reduce using rule 18 (Type)


State 25

   12 VarSpec: ID IdReps Type .

    $default  reduce using rule 12 (VarSpec)


State 26

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON . RPAR

    RPAR  shift, and go to state 31


State 27

   19 Parameters: ID . Type ParamOpts

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    Type  go to state 32


State 28

    7 FuncDeclaration: FUNC ID LPAR FuncParams . RPAR FuncType FuncBody

    RPAR  shift, and go to state 33


State 29

    8 FuncParams: Parameters .

    $default  reduce using rule 8 (FuncParams)


State 30

   13 IdReps: IdReps COMMA ID .

    $default  reduce using rule 13 (IdReps)


State 31

    6 VarDeclaration: VAR LPAR VarSpec SEMICOLON RPAR .

    $default  reduce using rule 6 (VarDeclaration)


State 32

   19 Parameters: ID Type . ParamOpts

    $default  reduce using rule 21 (ParamOpts)

    ParamOpts  go to state 34


State 33

    7 FuncDeclaration: FUNC ID LPAR FuncParams RPAR . FuncType FuncBody

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    $default  reduce using rule 11 (FuncType)

    FuncType  go to state 35
    Type      go to state 36


State 34

   19 Parameters: ID Type ParamOpts .
   20 ParamOpts: ParamOpts . COMMA ID Type

    COMMA  shift, and go to state 37

    $default  reduce using rule 19 (Parameters)


State 35

    7 FuncDeclaration: FUNC ID LPAR FuncParams RPAR FuncType . FuncBody

    LBRACE  shift, and go to state 38

    FuncBody  go to state 39


State 36

   10 FuncType: Type .

    $default  reduce using rule 10 (FuncType)


State 37

   20 ParamOpts: ParamOpts COMMA . ID Type

    ID  shift, and go to state 40


State 38

   22 FuncBody: LBRACE . VarsAndStatements RBRACE

    $default  reduce using rule 24 (VarsAndStatements)

    VarsAndStatements  go to state 41


State 39

    7 FuncDeclaration: FUNC ID LPAR FuncParams RPAR FuncType FuncBody .

    $default  reduce using rule 7 (FuncDeclaration)


State 40

   20 ParamOpts: ParamOpts COMMA ID . Type

    INT      shift, and go to state 21
    FLOAT32  shift, and go to state 22
    BOOL     shift, and go to state 23
    STRING   shift, and go to state 24

    Type  go to state 42


State 41

   22 FuncBody: LBRACE VarsAndStatements . RBRACE
   23 VarsAndStatements: VarsAndStatements . VASOpts SEMICOLON

    ID      shift, and go to state 43
    VAR     shift, and go to state 7
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 45
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    $default  reduce using rule 27 (VASOpts)

    VarDeclaration  go to state 50
    VASOpts         go to state 51
    Statement       go to state 52
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 42

   20 ParamOpts: ParamOpts COMMA ID Type .

    $default  reduce using rule 20 (ParamOpts)


State 43

   28 Statement: ID . ASSIGN Expr
   43 ParseArgs: ID . COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR
   44 FuncInvocation: ID . LPAR FuncInvocationOpts RPAR

    COMMA   shift, and go to state 55
    ASSIGN  shift, and go to state 56
    LPAR    shift, and go to state 57


State 44

   29 Statement: LBRACE . StmtBlock RBRACE

    $default  reduce using rule 38 (StmtBlock)

    StmtBlock  go to state 58


State 45

   22 FuncBody: LBRACE VarsAndStatements RBRACE .

    $default  reduce using rule 22 (FuncBody)


State 46

   32 Statement: RETURN . ExprOpt

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    $default  reduce using rule 42 (ExprOpt)

    ExprOpt         go to state 64
    FuncInvocation  go to state 65
    Expr            go to state 66


State 47

   35 Statement: PRINT . LPAR STRLIT RPAR
   36          | PRINT . LPAR Expr RPAR

    LPAR  shift, and go to state 67


State 48

   30 Statement: IF . Expr LBRACE StmtBlock RBRACE ElseStmt

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 68


State 49

   31 Statement: FOR . ExprOpt LBRACE StmtBlock RBRACE

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    $default  reduce using rule 42 (ExprOpt)

    ExprOpt         go to state 69
    FuncInvocation  go to state 65
    Expr            go to state 66


State 50

   25 VASOpts: VarDeclaration .

    $default  reduce using rule 25 (VASOpts)


State 51

   23 VarsAndStatements: VarsAndStatements VASOpts . SEMICOLON

    SEMICOLON  shift, and go to state 70


State 52

   26 VASOpts: Statement .

    $default  reduce using rule 26 (VASOpts)


State 53

   34 Statement: ParseArgs .

    $default  reduce using rule 34 (Statement)


State 54

   33 Statement: FuncInvocation .

    $default  reduce using rule 33 (Statement)


State 55

   43 ParseArgs: ID COMMA . BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    BLANKID  shift, and go to state 71


State 56

   28 Statement: ID ASSIGN . Expr

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 72


State 57

   44 FuncInvocation: ID LPAR . FuncInvocationOpts RPAR

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    $default  reduce using rule 46 (FuncInvocationOpts)

    FuncInvocation      go to state 65
    FuncInvocationOpts  go to state 73
    Expr                go to state 74


State 58

   29 Statement: LBRACE StmtBlock . RBRACE
   37 StmtBlock: StmtBlock . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 75
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 76
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 59

   51 Expr: INTLIT .

    $default  reduce using rule 51 (Expr)


State 60

   52 Expr: REALLIT .

    $default  reduce using rule 52 (Expr)


State 61

   44 FuncInvocation: ID . LPAR FuncInvocationOpts RPAR
   53 Expr: ID .

    LPAR  shift, and go to state 57

    $default  reduce using rule 53 (Expr)


State 62

   50 Expr: NOT . Expr

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 77


State 63

   55 Expr: LPAR . Expr RPAR

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 78


State 64

   32 Statement: RETURN ExprOpt .

    $default  reduce using rule 32 (Statement)


State 65

   54 Expr: FuncInvocation .

    $default  reduce using rule 54 (Expr)


State 66

   41 ExprOpt: Expr .
   49 Expr: Expr . ExprOperators Expr

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91

    $default  reduce using rule 41 (ExprOpt)

    ExprOperators  go to state 92


State 67

   35 Statement: PRINT LPAR . STRLIT RPAR
   36          | PRINT LPAR . Expr RPAR

    INTLIT   shift, and go to state 59
    STRLIT   shift, and go to state 93
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 94


State 68

   30 Statement: IF Expr . LBRACE StmtBlock RBRACE ElseStmt
   49 Expr: Expr . ExprOperators Expr

    PLUS    shift, and go to state 79
    MINUS   shift, and go to state 80
    STAR    shift, and go to state 81
    DIV     shift, and go to state 82
    MOD     shift, and go to state 83
    EQ      shift, and go to state 84
    GE      shift, and go to state 85
    GT      shift, and go to state 86
    LE      shift, and go to state 87
    LT      shift, and go to state 88
    NE      shift, and go to state 89
    AND     shift, and go to state 90
    OR      shift, and go to state 91
    LBRACE  shift, and go to state 95

    ExprOperators  go to state 92


State 69

   31 Statement: FOR ExprOpt . LBRACE StmtBlock RBRACE

    LBRACE  shift, and go to state 96


State 70

   23 VarsAndStatements: VarsAndStatements VASOpts SEMICOLON .

    $default  reduce using rule 23 (VarsAndStatements)


State 71

   43 ParseArgs: ID COMMA BLANKID . ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    ASSIGN  shift, and go to state 97


State 72

   28 Statement: ID ASSIGN Expr .
   49 Expr: Expr . ExprOperators Expr

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91

    $default  reduce using rule 28 (Statement)

    ExprOperators  go to state 92


State 73

   44 FuncInvocation: ID LPAR FuncInvocationOpts . RPAR

    RPAR  shift, and go to state 98


State 74

   45 FuncInvocationOpts: Expr . ExprReps
   49 Expr: Expr . ExprOperators Expr

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91

    $default  reduce using rule 48 (ExprReps)

    ExprReps       go to state 99
    ExprOperators  go to state 92


State 75

   29 Statement: LBRACE StmtBlock RBRACE .

    $default  reduce using rule 29 (Statement)


State 76

   37 StmtBlock: StmtBlock Statement . SEMICOLON

    SEMICOLON  shift, and go to state 100


State 77

   49 Expr: Expr . ExprOperators Expr
   50     | NOT Expr .

    $default  reduce using rule 50 (Expr)

    ExprOperators  go to state 92


State 78

   49 Expr: Expr . ExprOperators Expr
   55     | LPAR Expr . RPAR

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91
    RPAR   shift, and go to state 101

    ExprOperators  go to state 92


State 79

   64 ExprOperators: PLUS .

    $default  reduce using rule 64 (ExprOperators)


State 80

   65 ExprOperators: MINUS .

    $default  reduce using rule 65 (ExprOperators)


State 81

   66 ExprOperators: STAR .

    $default  reduce using rule 66 (ExprOperators)


State 82

   67 ExprOperators: DIV .

    $default  reduce using rule 67 (ExprOperators)


State 83

   68 ExprOperators: MOD .

    $default  reduce using rule 68 (ExprOperators)


State 84

   60 ExprOperators: EQ .

    $default  reduce using rule 60 (ExprOperators)


State 85

   63 ExprOperators: GE .

    $default  reduce using rule 63 (ExprOperators)


State 86

   59 ExprOperators: GT .

    $default  reduce using rule 59 (ExprOperators)


State 87

   62 ExprOperators: LE .

    $default  reduce using rule 62 (ExprOperators)


State 88

   58 ExprOperators: LT .

    $default  reduce using rule 58 (ExprOperators)


State 89

   61 ExprOperators: NE .

    $default  reduce using rule 61 (ExprOperators)


State 90

   57 ExprOperators: AND .

    $default  reduce using rule 57 (ExprOperators)


State 91

   56 ExprOperators: OR .

    $default  reduce using rule 56 (ExprOperators)


State 92

   49 Expr: Expr ExprOperators . Expr

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 102


State 93

   35 Statement: PRINT LPAR STRLIT . RPAR

    RPAR  shift, and go to state 103


State 94

   36 Statement: PRINT LPAR Expr . RPAR
   49 Expr: Expr . ExprOperators Expr

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91
    RPAR   shift, and go to state 104

    ExprOperators  go to state 92


State 95

   30 Statement: IF Expr LBRACE . StmtBlock RBRACE ElseStmt

    $default  reduce using rule 38 (StmtBlock)

    StmtBlock  go to state 105


State 96

   31 Statement: FOR ExprOpt LBRACE . StmtBlock RBRACE

    $default  reduce using rule 38 (StmtBlock)

    StmtBlock  go to state 106


State 97

   43 ParseArgs: ID COMMA BLANKID ASSIGN . PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR

    PARSEINT  shift, and go to state 107


State 98

   44 FuncInvocation: ID LPAR FuncInvocationOpts RPAR .

    $default  reduce using rule 44 (FuncInvocation)


State 99

   45 FuncInvocationOpts: Expr ExprReps .
   47 ExprReps: ExprReps . COMMA Expr

    COMMA  shift, and go to state 108

    $default  reduce using rule 45 (FuncInvocationOpts)


State 100

   37 StmtBlock: StmtBlock Statement SEMICOLON .

    $default  reduce using rule 37 (StmtBlock)


State 101

   55 Expr: LPAR Expr RPAR .

    $default  reduce using rule 55 (Expr)


State 102

   49 Expr: Expr . ExprOperators Expr
   49     | Expr ExprOperators Expr .

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91

    PLUS      [reduce using rule 49 (Expr)]
    MINUS     [reduce using rule 49 (Expr)]
    STAR      [reduce using rule 49 (Expr)]
    DIV       [reduce using rule 49 (Expr)]
    MOD       [reduce using rule 49 (Expr)]
    EQ        [reduce using rule 49 (Expr)]
    GE        [reduce using rule 49 (Expr)]
    GT        [reduce using rule 49 (Expr)]
    LE        [reduce using rule 49 (Expr)]
    LT        [reduce using rule 49 (Expr)]
    NE        [reduce using rule 49 (Expr)]
    AND       [reduce using rule 49 (Expr)]
    OR        [reduce using rule 49 (Expr)]
    $default  reduce using rule 49 (Expr)

    ExprOperators  go to state 92


State 103

   35 Statement: PRINT LPAR STRLIT RPAR .

    $default  reduce using rule 35 (Statement)


State 104

   36 Statement: PRINT LPAR Expr RPAR .

    $default  reduce using rule 36 (Statement)


State 105

   30 Statement: IF Expr LBRACE StmtBlock . RBRACE ElseStmt
   37 StmtBlock: StmtBlock . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 109
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 76
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 106

   31 Statement: FOR ExprOpt LBRACE StmtBlock . RBRACE
   37 StmtBlock: StmtBlock . Statement SEMICOLON

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 110
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 76
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 107

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT . LPAR CMDARGS LSQ Expr RSQ RPAR

    LPAR  shift, and go to state 111


State 108

   47 ExprReps: ExprReps COMMA . Expr

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 112


State 109

   30 Statement: IF Expr LBRACE StmtBlock RBRACE . ElseStmt

    ELSE  shift, and go to state 113

    $default  reduce using rule 40 (ElseStmt)

    ElseStmt  go to state 114


State 110

   31 Statement: FOR ExprOpt LBRACE StmtBlock RBRACE .

    $default  reduce using rule 31 (Statement)


State 111

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR . CMDARGS LSQ Expr RSQ RPAR

    CMDARGS  shift, and go to state 115


State 112

   47 ExprReps: ExprReps COMMA Expr .
   49 Expr: Expr . ExprOperators Expr

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91

    $default  reduce using rule 47 (ExprReps)

    ExprOperators  go to state 92


State 113

   39 ElseStmt: ELSE . LBRACE StmtBlock RBRACE

    LBRACE  shift, and go to state 116


State 114

   30 Statement: IF Expr LBRACE StmtBlock RBRACE ElseStmt .

    $default  reduce using rule 30 (Statement)


State 115

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS . LSQ Expr RSQ RPAR

    LSQ  shift, and go to state 117


State 116

   39 ElseStmt: ELSE LBRACE . StmtBlock RBRACE

    $default  reduce using rule 38 (StmtBlock)

    StmtBlock  go to state 118


State 117

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ . Expr RSQ RPAR

    INTLIT   shift, and go to state 59
    REALLIT  shift, and go to state 60
    ID       shift, and go to state 61
    NOT      shift, and go to state 62
    LPAR     shift, and go to state 63

    FuncInvocation  go to state 65
    Expr            go to state 119


State 118

   37 StmtBlock: StmtBlock . Statement SEMICOLON
   39 ElseStmt: ELSE LBRACE StmtBlock . RBRACE

    ID      shift, and go to state 43
    LBRACE  shift, and go to state 44
    RBRACE  shift, and go to state 120
    RETURN  shift, and go to state 46
    PRINT   shift, and go to state 47
    IF      shift, and go to state 48
    FOR     shift, and go to state 49

    Statement       go to state 76
    ParseArgs       go to state 53
    FuncInvocation  go to state 54


State 119

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr . RSQ RPAR
   49 Expr: Expr . ExprOperators Expr

    PLUS   shift, and go to state 79
    MINUS  shift, and go to state 80
    STAR   shift, and go to state 81
    DIV    shift, and go to state 82
    MOD    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    NE     shift, and go to state 89
    AND    shift, and go to state 90
    OR     shift, and go to state 91
    RSQ    shift, and go to state 121

    ExprOperators  go to state 92


State 120

   39 ElseStmt: ELSE LBRACE StmtBlock RBRACE .

    $default  reduce using rule 39 (ElseStmt)


State 121

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ . RPAR

    RPAR  shift, and go to state 122


State 122

   43 ParseArgs: ID COMMA BLANKID ASSIGN PARSEINT LPAR CMDARGS LSQ Expr RSQ RPAR .

    $default  reduce using rule 43 (ParseArgs)
